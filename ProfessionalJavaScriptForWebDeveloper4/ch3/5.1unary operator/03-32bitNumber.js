/*
 * @Author: mangwu                                                             *
 * @File: 03-32bitNumber.js                                                    *
 * @Date: 2022-05-24 21:32:16                                                  *
 * @LastModifiedDate: 2022-05-24 22:02:22                                      *
 * @ModifiedBy: mangwu                                                         *
 * -----------------------                                                     *
 * Copyright (c) 2022 mangwu                                                   *
 * -----------------------                                                     *
 * @HISTORY:                                                                   *
 * Date   	            By 	    Comments                                       *
 * ---------------------	--------	----------------------------------------------- *
 */

// ECMAScript大多整数都是32位有符号数
// toString传递基数能得到整数的指定基数的进制数字符
// 负整数计算方式为得到正整数的二进制数，然后加上-符号

let num = -100;
console.log(num.toString(2));

// 正整数，符号位为0，31位真正的二进制位
// 负整数，符号位为1，31位补码 => 绝对值的二进制取反加1
// 负整数的最小值 2^31 使用负0表示，即8000 0000
