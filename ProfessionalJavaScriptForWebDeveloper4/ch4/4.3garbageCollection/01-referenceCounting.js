/*
 * @Author: mangwu                                                             *
 * @File: 01-referenceCompute.js                                               *
 * @Date: 2022-06-19 23:15:50                                                  *
 * @LastModifiedDate: 2022-06-21 14:36:19                                      *
 * @ModifiedBy: mangwu                                                         *
 * -----------------------                                                     *
 * Copyright (c) 2022 mangwu                                                   *
 * -----------------------                                                     *
 * @HISTORY:                                                                   *
 * Date   	            By 	    Comments                                       *
 * ---------------------	--------	----------------------------------------------- *
 */

// 垃圾回收有两种策略
// 标记清理和引用计数
// 标记清理是一种策略，它标记进入当前上下文的变量，当变量离开当前上下文，就会被标记成离开上下文
// 之后就会被垃圾回收程序清理

// 引用计数
// 每次声明和赋值都会更改变量值的引用数，
// 例如新声明一个变量，这个变量值的引用就是1，如果这个值被赋给其它变量，引用加1
// 如果保存改值的变量被赋值其它值，改值的引用减少1，而其它值的引用增加1
// 引用数为0的值应该被清除
// 问题：循环引用，对象属性引用其它对象，二者相互引用，导致引用数不能为，如下

function problem() {
  let objA = {};
  let objB = {};
  objA["B"] = objB;
  objB["A"] = objA;
  console.log(objA);
  console.log(objB);
}
problem();
